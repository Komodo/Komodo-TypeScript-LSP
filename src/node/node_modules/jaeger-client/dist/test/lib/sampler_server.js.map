{"version":3,"sources":["../../../test/lib/sampler_server.js"],"names":["SamplingServer","port","_port","_app","_strategies","Object","create","get","_handle","bind","serviceName","response","req","res","service","query","strategy","send","status","err","_server","listen","close"],"mappings":";;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;IAEqBA,c;AAMjB,8BAAiC;AAAA,YAArBC,IAAqB,uEAAN,IAAM;;AAAA;;AAC7B,aAAKC,KAAL,GAAaD,IAAb;AACA,aAAKE,IAAL,GAAY,wBAAZ;AACA,aAAKC,WAAL,GAAmBC,OAAOC,MAAP,CAAc,IAAd,CAAnB;AACA,aAAKH,IAAL,CAAUI,GAAV,CAAc,WAAd,EAA2B,KAAKC,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAA3B;AACH;;;;oCAEWC,W,EAAqBC,Q,EAA0C;AACvE,iBAAKP,WAAL,CAAiBM,WAAjB,IAAgCC,QAAhC;AACH;;;0CAEuB;AACpB,iBAAKP,WAAL,GAAmBC,OAAOC,MAAP,CAAc,IAAd,CAAnB;AACH;;;gCAEOM,G,EAAUC,G,EAAU;AACxB,gBAAIC,UAAUF,IAAIG,KAAJ,CAAUD,OAAxB;AACA,gBAAIE,WAAW,KAAKZ,WAAL,CAAiBU,OAAjB,CAAf;AACA,gBAAIE,QAAJ,EAAc;AACVH,oBAAII,IAAJ,CAASD,QAAT;AACH,aAFD,MAEO;AACHH,oBAAIK,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB,EAACE,iCAA8BL,OAA9B,OAAD,EAArB;AACH;AACJ;;;gCAEuB;AACpB,iBAAKM,OAAL,GAAe,KAAKjB,IAAL,CAAUkB,MAAV,CAAiB,KAAKnB,KAAtB,CAAf;AACA,mBAAO,IAAP;AACH;;;gCAEa;AACV,iBAAKkB,OAAL,CAAaE,KAAb;AACH;;;;;;kBAtCgBtB,c","file":"sampler_server.js","sourcesContent":["// @flow\n// Copyright (c) 2016 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n// in compliance with the License. You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software distributed under the License\n// is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n// or implied. See the License for the specific language governing permissions and limitations under\n// the License.\n\nimport express from 'express';\n\nexport default class SamplingServer {\n    _port: number;\n    _app: any;\n    _server: any;\n    _strategies: { [service: string]: SamplingStrategyResponse };\n\n    constructor(port: number = 5778) {\n        this._port = port;\n        this._app = express();\n        this._strategies = Object.create(null);\n        this._app.get('/sampling', this._handle.bind(this));\n    }\n\n    addStrategy(serviceName: string, response: SamplingStrategyResponse): void {\n        this._strategies[serviceName] = response;\n    }\n\n    clearStrategies(): void {\n        this._strategies = Object.create(null);\n    }\n\n    _handle(req: any, res: any) {\n        let service = req.query.service;\n        let strategy = this._strategies[service];\n        if (strategy) {\n            res.send(strategy);\n        } else {\n            res.status(404).send({err: `unknown service name '${service}'`});\n        }\n    }\n\n    start(): SamplingServer {\n        this._server = this._app.listen(this._port);\n        return this;\n    }\n\n    close(): void {\n        this._server.close();\n    }\n}\n"]}